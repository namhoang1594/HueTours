@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.Cart>
@using ContentModels = Umbraco.Web.PublishedModels;
@using Huetours.Core.Extensions;
@using Vendr.Core;

@{
    Layout = "master.cshtml";
    var home = (Home)Model.Root();
    var order = Model.GetCurrentOrder();
    var checkout = (VendrCheckoutCheckoutPage)home.Children.FirstOrDefault(x => x.ContentType.Alias.Equals("vendrCheckoutCheckoutPage"));

}

<section style="background-color: #f5f5f5">
    <div class="container" style="padding-top: 50px;">
        <h3>Giỏ hàng</h3>
        <br />
        @if (Model != null && order != null && order.OrderLines.Any())
        {
            using (Html.BeginUmbracoForm("UpdateCart", "CartSurface"))
            {
                <div class="table-responsive">
                    <table class="table table-shopping">
                        <thead>
                            <tr>
                                <th>Sản Phẩm</th>
                                <th></th>
                                <th></th>
                                <th>Giá</th>
                                <th>Số Người</th>
                                <th>Thành Tiền</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in order.OrderLines.Select((ol, i) => new { OrderLine = ol, Index = i }))
                            {
                                var product = Umbraco.Content(item.OrderLine.ProductReference.As<Guid>());
                                var image = product.Value<MediaWithCrops>("thumbnailImage");
                                <tr>
                                    <td>
                                        <div>
                                            @if (image != null)
                                            {
                                                <a href="@product.Url()">
                                                    <img src="@image.GetCropUrl(120,120)" alt=" " />
                                                </a>
                                            }
                                        </div>
                                    </td>
                                    <td colspan="2">
                                        <a style="color:darkviolet;font-size: 18px;font-weight:500;" href="@product.Url()">@item.OrderLine.Name</a>
                                    </td>
                                    <td style="color:red">
                                        @(item.OrderLine.UnitPrice.Value.Formatted())
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            @Html.Hidden($"orderLines[{item.Index}].Id", item.OrderLine.Id)
                                            @Html.TextBox($"orderLines[{item.Index}].Quantity", (int)item.OrderLine.Quantity,
                                           new { @class = "form-control input-number quantity", type = "number" })
                                        </div>
                                    </td>
                                    <td style="color:red">
                                        @(item.OrderLine.TotalPrice.Value.Formatted())
                                    </td>
                                    <td>
                                        <a href="@Url.SurfaceAction("RemoveFromCart","CartSurface", new {
                                            OrderLineId = item.OrderLine.Id})" rel="tooltip" class="btn btn-link btn-warning" style="color:#000000">
                                            Remove <i class="fas fa-times"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                            <tr>
                                <td></td>
                                <td colspan="2" style="font-weight:600;font-size: 20px;">Tổng cộng: </td>
                                <td class="td-price" style="font-weight:600;font-size: 20px; color:red">
                                    @(order.SubtotalPrice.Value.Formatted())
                                </td>
                                <td></td>
                                <td>
                                    <button class="btn btn-success btn-round" title="Refresh Cart">Cập nhật  <i class="fas fa-sync"></i></button>
                                </td>
                                <td class="text-right">
                                    <a href="@checkout.Url()" class="btn btn-round" style="color: #ffffff; font-weight: 600; background-color: #f37a08;">Thanh toán ngay <i class="fas fa-shopping-cart"></i></a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            }
        }
        else
        {
            var shopPage = Model.Root().ChildrenOfType("groupTours").FirstOrDefault();

            <p>Giỏ hàng của bạn đang trống</p>
            if (shopPage != null)
            {
                <p>Quay về <a href="@shopPage">@shopPage.Name</a>để đặt sản phẩm!</p>
            }
        }
    </div>
</section>

@section ScriptsBottom
{
    @if (!(TempData["cartUpdated"]?.ToString()).IsNullOrWhiteSpace())
    {
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                Toastify({
                    text: "Đã cập nhật giỏ hàng",
                    duration: 3000,
                    gravity: "bottom",
                    position: "center",
                    close: true,
                    stopOnFocus: true,
                }).showToast();
            });
        </script>
    }

    @if (!(TempData["itemRemovedFromCart"]?.ToString()).IsNullOrWhiteSpace())
    {
<script>
            document.addEventListener('DOMContentLoaded', function() {
                Toastify({
                    text: "Đã xóa sản phẩm khỏi giỏ hàng",
                    duration: 3000,
                    gravity: "bottom",
                    position: "center",
                    close: true,
                    stopOnFocus: true,
                }).showToast();
            });
</script>
    }
}